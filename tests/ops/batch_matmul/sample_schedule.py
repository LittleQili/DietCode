from tvm import te


def batch_matmul_nt_1x128x128x8(X, W, T_batch_matmul_NT, s):
    T_batch_matmul_NT_b, T_batch_matmul_NT_i, T_batch_matmul_NT_j, T_batch_matmul_NT_k = tuple(T_batch_matmul_NT.op.axis) + tuple(T_batch_matmul_NT.op.reduce_axis)
    T_batch_matmul_NT_local, = s.cache_write([T_batch_matmul_NT], "local")
    T_batch_matmul_NT_local_b_c, T_batch_matmul_NT_local_i_c, T_batch_matmul_NT_local_j_c, T_batch_matmul_NT_local_k = tuple(T_batch_matmul_NT_local.op.axis) + tuple(T_batch_matmul_NT_local.op.reduce_axis)
    T_batch_matmul_NT_local_b_c_o_i, T_batch_matmul_NT_local_b_c_i = s[T_batch_matmul_NT_local].split(T_batch_matmul_NT_local_b_c, factor=1)
    T_batch_matmul_NT_local_b_c_o_o_i, T_batch_matmul_NT_local_b_c_o_i = s[T_batch_matmul_NT_local].split(T_batch_matmul_NT_local_b_c_o_i, factor=1)
    T_batch_matmul_NT_local_b_c_o_o_o_i, T_batch_matmul_NT_local_b_c_o_o_i = s[T_batch_matmul_NT_local].split(T_batch_matmul_NT_local_b_c_o_o_i, factor=1)
    T_batch_matmul_NT_local_b_c_o_o_o_o, T_batch_matmul_NT_local_b_c_o_o_o_i = s[T_batch_matmul_NT_local].split(T_batch_matmul_NT_local_b_c_o_o_o_i, factor=1)
    T_batch_matmul_NT_local_i_c_o_i, T_batch_matmul_NT_local_i_c_i = s[T_batch_matmul_NT_local].split(T_batch_matmul_NT_local_i_c, factor=2)
    T_batch_matmul_NT_local_i_c_o_o_i, T_batch_matmul_NT_local_i_c_o_i = s[T_batch_matmul_NT_local].split(T_batch_matmul_NT_local_i_c_o_i, factor=16)
    T_batch_matmul_NT_local_i_c_o_o_o_i, T_batch_matmul_NT_local_i_c_o_o_i = s[T_batch_matmul_NT_local].split(T_batch_matmul_NT_local_i_c_o_o_i, factor=4)
    T_batch_matmul_NT_local_i_c_o_o_o_o, T_batch_matmul_NT_local_i_c_o_o_o_i = s[T_batch_matmul_NT_local].split(T_batch_matmul_NT_local_i_c_o_o_o_i, factor=1)
    T_batch_matmul_NT_local_j_c_o_i, T_batch_matmul_NT_local_j_c_i = s[T_batch_matmul_NT_local].split(T_batch_matmul_NT_local_j_c, factor=1)
    T_batch_matmul_NT_local_j_c_o_o_i, T_batch_matmul_NT_local_j_c_o_i = s[T_batch_matmul_NT_local].split(T_batch_matmul_NT_local_j_c_o_i, factor=1)
    T_batch_matmul_NT_local_j_c_o_o_o_i, T_batch_matmul_NT_local_j_c_o_o_i = s[T_batch_matmul_NT_local].split(T_batch_matmul_NT_local_j_c_o_o_i, factor=32)
    T_batch_matmul_NT_local_j_c_o_o_o_o, T_batch_matmul_NT_local_j_c_o_o_o_i = s[T_batch_matmul_NT_local].split(T_batch_matmul_NT_local_j_c_o_o_o_i, factor=4)
    T_batch_matmul_NT_local_k_o_i, T_batch_matmul_NT_local_k_i = s[T_batch_matmul_NT_local].split(T_batch_matmul_NT_local_k, factor=4)
    T_batch_matmul_NT_local_k_o_o, T_batch_matmul_NT_local_k_o_i = s[T_batch_matmul_NT_local].split(T_batch_matmul_NT_local_k_o_i, factor=2)
    s[T_batch_matmul_NT_local].reorder(T_batch_matmul_NT_local_b_c_o_o_o_o, T_batch_matmul_NT_local_i_c_o_o_o_o, T_batch_matmul_NT_local_j_c_o_o_o_o, T_batch_matmul_NT_local_b_c_o_o_o_i, T_batch_matmul_NT_local_i_c_o_o_o_i, T_batch_matmul_NT_local_j_c_o_o_o_i, T_batch_matmul_NT_local_b_c_o_o_i, T_batch_matmul_NT_local_i_c_o_o_i, T_batch_matmul_NT_local_j_c_o_o_i, T_batch_matmul_NT_local_k_o_o, T_batch_matmul_NT_local_k_o_i, T_batch_matmul_NT_local_b_c_o_i, T_batch_matmul_NT_local_i_c_o_i, T_batch_matmul_NT_local_j_c_o_i, T_batch_matmul_NT_local_k_i, T_batch_matmul_NT_local_b_c_i, T_batch_matmul_NT_local_i_c_i, T_batch_matmul_NT_local_j_c_i)
    T_batch_matmul_NT_b_o_i, T_batch_matmul_NT_b_i = s[T_batch_matmul_NT].split(T_batch_matmul_NT_b, factor=1)
    T_batch_matmul_NT_b_o_o_i, T_batch_matmul_NT_b_o_i = s[T_batch_matmul_NT].split(T_batch_matmul_NT_b_o_i, factor=1)
    T_batch_matmul_NT_b_o_o_o, T_batch_matmul_NT_b_o_o_i = s[T_batch_matmul_NT].split(T_batch_matmul_NT_b_o_o_i, factor=1)
    T_batch_matmul_NT_i_o_i, T_batch_matmul_NT_i_i = s[T_batch_matmul_NT].split(T_batch_matmul_NT_i, factor=32)
    T_batch_matmul_NT_i_o_o_i, T_batch_matmul_NT_i_o_i = s[T_batch_matmul_NT].split(T_batch_matmul_NT_i_o_i, factor=4)
    T_batch_matmul_NT_i_o_o_o, T_batch_matmul_NT_i_o_o_i = s[T_batch_matmul_NT].split(T_batch_matmul_NT_i_o_o_i, factor=1)
    T_batch_matmul_NT_j_o_i, T_batch_matmul_NT_j_i = s[T_batch_matmul_NT].split(T_batch_matmul_NT_j, factor=1)
    T_batch_matmul_NT_j_o_o_i, T_batch_matmul_NT_j_o_i = s[T_batch_matmul_NT].split(T_batch_matmul_NT_j_o_i, factor=32)
    T_batch_matmul_NT_j_o_o_o, T_batch_matmul_NT_j_o_o_i = s[T_batch_matmul_NT].split(T_batch_matmul_NT_j_o_o_i, factor=4)
    s[T_batch_matmul_NT].reorder(T_batch_matmul_NT_b_o_o_o, T_batch_matmul_NT_i_o_o_o, T_batch_matmul_NT_j_o_o_o, T_batch_matmul_NT_b_o_o_i, T_batch_matmul_NT_i_o_o_i, T_batch_matmul_NT_j_o_o_i, T_batch_matmul_NT_b_o_i, T_batch_matmul_NT_i_o_i, T_batch_matmul_NT_j_o_i, T_batch_matmul_NT_b_i, T_batch_matmul_NT_i_i, T_batch_matmul_NT_j_i)
    s[T_batch_matmul_NT_local].compute_at(s[T_batch_matmul_NT], T_batch_matmul_NT_j_o_i)
    W_shared = s.cache_read(W, "shared", [T_batch_matmul_NT_local])
    W_shared_ax0, W_shared_ax1, W_shared_ax2 = tuple(W_shared.op.axis)
    s[W_shared].compute_at(s[T_batch_matmul_NT_local], T_batch_matmul_NT_local_k_o_o)
    X_shared = s.cache_read(X, "shared", [T_batch_matmul_NT_local])
    X_shared_ax0, X_shared_ax1, X_shared_ax2 = tuple(X_shared.op.axis)
    s[X_shared].compute_at(s[T_batch_matmul_NT_local], T_batch_matmul_NT_local_k_o_o)
    T_batch_matmul_NT_b_o_o_o_i_o_o_o_fused_j_o_o_o_fused = s[T_batch_matmul_NT].fuse(T_batch_matmul_NT_b_o_o_o, T_batch_matmul_NT_i_o_o_o, T_batch_matmul_NT_j_o_o_o)
    s[T_batch_matmul_NT].bind(T_batch_matmul_NT_b_o_o_o_i_o_o_o_fused_j_o_o_o_fused, te.thread_axis("blockIdx.x"))
    T_batch_matmul_NT_b_o_o_i_i_o_o_i_fused_j_o_o_i_fused = s[T_batch_matmul_NT].fuse(T_batch_matmul_NT_b_o_o_i, T_batch_matmul_NT_i_o_o_i, T_batch_matmul_NT_j_o_o_i)
    s[T_batch_matmul_NT].bind(T_batch_matmul_NT_b_o_o_i_i_o_o_i_fused_j_o_o_i_fused, te.thread_axis("vthread"))
    T_batch_matmul_NT_b_o_i_i_o_i_fused_j_o_i_fused = s[T_batch_matmul_NT].fuse(T_batch_matmul_NT_b_o_i, T_batch_matmul_NT_i_o_i, T_batch_matmul_NT_j_o_i)
    s[T_batch_matmul_NT].bind(T_batch_matmul_NT_b_o_i_i_o_i_fused_j_o_i_fused, te.thread_axis("threadIdx.x"))
    W_shared_ax0_ax1_fused_ax2_fused = s[W_shared].fuse(W_shared_ax0, W_shared_ax1, W_shared_ax2)
    W_shared_ax0_ax1_fused_ax2_fused_o, W_shared_ax0_ax1_fused_ax2_fused_i = s[W_shared].split(W_shared_ax0_ax1_fused_ax2_fused, factor=4)
    s[W_shared].vectorize(W_shared_ax0_ax1_fused_ax2_fused_i)
    W_shared_ax0_ax1_fused_ax2_fused_o_o, W_shared_ax0_ax1_fused_ax2_fused_o_i = s[W_shared].split(W_shared_ax0_ax1_fused_ax2_fused_o, factor=128)
    s[W_shared].bind(W_shared_ax0_ax1_fused_ax2_fused_o_i, te.thread_axis("threadIdx.x"))
    X_shared_ax0_ax1_fused_ax2_fused = s[X_shared].fuse(X_shared_ax0, X_shared_ax1, X_shared_ax2)
    X_shared_ax0_ax1_fused_ax2_fused_o, X_shared_ax0_ax1_fused_ax2_fused_i = s[X_shared].split(X_shared_ax0_ax1_fused_ax2_fused, factor=1)
    s[X_shared].vectorize(X_shared_ax0_ax1_fused_ax2_fused_i)
    X_shared_ax0_ax1_fused_ax2_fused_o_o, X_shared_ax0_ax1_fused_ax2_fused_o_i = s[X_shared].split(X_shared_ax0_ax1_fused_ax2_fused_o, factor=128)
    s[X_shared].bind(X_shared_ax0_ax1_fused_ax2_fused_o_i, te.thread_axis("threadIdx.x"))
    s[T_batch_matmul_NT_local].pragma(T_batch_matmul_NT_local_b_c_o_o_o_o, "auto_unroll_max_step", 512)
    s[T_batch_matmul_NT_local].pragma(T_batch_matmul_NT_local_b_c_o_o_o_o, "unroll_explicit", True)
